# Generated by Django 3.2.2 on 2021-05-12 09:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('quiz', '0001_initial'),
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chatroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonAdminID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quiz.user')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bodyText', models.CharField(max_length=200)),
                ('dateCreated', models.DateField()),
                ('timeCreated', models.TimeField()),
                ('chatroomID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.chatroom')),
                ('creatorID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_by', to='quiz.user')),
                ('parentMessageID', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='parent_message_of', to='dashboard.message')),
                ('recipientID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_by', to='quiz.user')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ReportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='SuggestionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateIssued', models.DateField()),
                ('timeIssued', models.TimeField()),
                ('title', models.CharField(max_length=30)),
                ('subjectContent', models.CharField(max_length=200)),
                ('creatorID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.user')),
                ('typeID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.suggestiontype')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateField()),
                ('title', models.CharField(max_length=50)),
                ('URL', models.URLField()),
                ('typeID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.reporttype')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.user')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isOpen', models.BooleanField()),
                ('blogCommentReplyID', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_reply_notif_for', to='blog.blogpostcomment')),
                ('messageID', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='message_notif_for', to='dashboard.message')),
                ('recipientID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='is_for', to='quiz.user')),
                ('senderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_by', to='quiz.user')),
                ('suggestionID', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suggestion_notif_for', to='dashboard.suggestion')),
                ('typeID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.notificationtype')),
            ],
        ),
        migrations.CreateModel(
            name='InfoDashboardBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateTimeAdded', models.DateTimeField()),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.user')),
            ],
        ),
    ]
